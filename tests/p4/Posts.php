<?php

use Facebook\WebDriver\WebDriverBy;
use Facebook\WebDriver\WebDriverExpectedCondition;
use Facebook\WebDriver\WebDriverKeys;

class P4_Posts extends P4_login {

	/**
	 * @var \RemoteWebDriver
	 */
	public function testPosts() {

		$post_title  = 'Test automated â€“ Post';
		$description = 'This is demo content generated by an automated test';
		$tag         = 'Oceans';
		//Verify if user is already logged in
		//I log in

		try {
			$this->wpLogin();
		} catch ( Exception $e ) {
			$this->fail( '->Failed to log in, verify credentials and URL' );
		}

		//Go to pages to create content
		$this->driver->wait( 3 );
		$pages = $this->driver->findElement(
			WebDriverBy::id( 'menu-posts' ) );
		$pages->click();
		try {
			$link = $this->driver->findElement(
				WebDriverBy::linkText( 'Add New' ) );
		} catch ( Exception $e ) {
			$this->fail( '->Could not find \'Add New\' button in Pages overview' );
		}
		$link->click();

		//Enter title
		$field = $this->driver->findElement(
			WebDriverBy::id( 'title-prompt-text' )
		);
		$field->click();
		$this->driver->getKeyboard()->sendKeys( $post_title );

		//Enter description
		try {
			$this->driver->findElement( WebDriverBy::id( 'content-html' ) )->click();
			$this->driver->findElement( WebDriverBy::id( 'content' ) )->click();
			$this->driver->getKeyboard()->sendKeys( $description );
			$this->driver->switchTo()->defaultContent();
		} catch ( Exception $e ) {
			$this->fail( '->Failed to enter post description' );
		}

		//Add image
		try {
			$this->driver->findElement( WebDriverBy::id( 'insert-media-button' ) )->click();
			$this->driver->findElement( WebDriverBy::className( 'media-modal-content' ) );
			$this->driver->findElement( WebDriverBy::linkText('Media Library') )->click();
			$this->driver->findElement( WebDriverBy::id( 'media-attachment-filters' ) )->click();
			$this->driver->findElement( WebDriverBy::cssSelector( 'option[value=\'image\']' ) )->click();
			//Wait for media library to load
			$this->driver->wait( 10, 1000 )->until(
				WebDriverExpectedCondition::presenceOfElementLocated(
					WebDriverBy::cssSelector( 'ul.attachments' ) ) );
			$this->driver->manage()->timeouts()->implicitlyWait( 10 );
			$srcfirstchild = $this->driver->findElement(
				WebDriverBy::cssSelector( 'li.attachment:first-child img' ) )->getAttribute( 'src' );
			$this->driver->findElement( WebDriverBy::cssSelector( 'li.attachment:first-child' ) )->click();
			$this->driver->findElement( WebDriverBy::className( 'media-button-insert' ) )->click();
		} catch ( Exception $e ) {
			$this->fail( '->Failed to add image' );
		}
		//Wait for content to load
		usleep( 1000000 );

		//Add category
		try {
			$this->driver->findElement( WebDriverBy::cssSelector( '#categorychecklist li.popular-category:nth-child(2) input' ) )->click();
		} catch ( Exception $e ) {
			$this->fail( '->Failed to add category to post' );
		}

		//Add tag
		try {
			$this->driver->findElement( WebDriverBy::id( 'new-tag-post_tag' ) )->click();
			$this->driver->getKeyboard()->sendKeys( $tag );
			//Sleep for 3 seconds for suggestion to appear
			usleep( 3000000 );
			//Select suggestion
			$this->driver->getKeyboard()->pressKey( WebDriverKeys::ENTER );
			$this->driver->findElement( WebDriverBy::className( 'tagadd' ) )->click();
		} catch ( Exception $e ) {
			$this->fail( '->Failed to add tag to post' );
		}

		//Publish content
		$this->driver->findElement(
			WebDriverBy::id( 'publish' )
		)->click();
		//Wait for content to load
		usleep( 2000000 );

		try {
			//Validate I see successful message
			$this->assertContains(
				'Post published', $this->driver->findElement(
				WebDriverBy::id( 'message' ) )->getText() );
		} catch ( Exception $e ) {
			$this->fail( '->Failed to publish content - no sucessful message after saving content' );
		}

		//Wait for saved changes to load
		usleep( 2000000 );
		//Go to page to validate page contains content added
		$link = $this->driver->findElement(
			WebDriverBy::linkText( 'View post' )
		);
		$link->click();
		//If alert shows up asking to confirm leaving the page, confirm
		try {
			$this->driver->switchTo()->alert()->accept();
		} catch ( Exception $e ) {
		}

		//Validate elements are present

		try {
			//$type = $this->webDriver->findElement(WebDriverBy::cssSelector(".page-header .top-page-tags a.tag-item--main"))->getText();
			$title_pg = $this->driver->findElement( WebDriverBy::className( "page-header-title" ) )->getText();
			$this->driver->findElement( WebDriverBy::className( "post-content" ) );
			$desc_pg    = $this->driver->findElement(
				WebDriverBy::cssSelector( ".post-content-lead article.post-details p" ) )->getText();
			$srcimg_pg  = $this->driver->findElement(
				WebDriverBy::cssSelector( ".post-content-lead article.post-details img" ) )->getAttribute( 'src' );
			$image_path = pathinfo( $srcimg_pg, PATHINFO_FILENAME );
			$srcimg_pg  = substr( $image_path, 0, strrpos( $image_path, '-' ) );
		} catch ( Exception $e ) {
			$this->fail( $e->getMessage() );
			$this->fail( '->Failed to see some of the created content on front end page' );
		}

		$this->assertEquals( $post_title, $title_pg );
		$this->assertEquals( $description, $desc_pg );
		$this->assertContains( $srcimg_pg, $srcfirstchild );

		echo "\n-> Posts test PASSED";
	}
}
