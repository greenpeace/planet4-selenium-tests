<?php

//This class is needed to start the session and open/close the browser
require_once __DIR__ . '/../wp-core/login.php';

class P4_Header extends P4_login {

  /**
   * @var \RemoteWebDriver
   */


  public function testHeader()
  {

   	//I log in
	try{
   		$this->wpLogin();
	}catch(Exception $e){
		$this->fail('->Failed to log in, verify credentials and URL');
	}

	//Go to pages and create content  
   	$this->webDriver->wait(3);
	$pages = $this->webDriver->findElement(
		WebDriverBy::id("menu-pages"));
	$pages->click();
	try{
		$link = $this->webDriver->findElement(
			WebDriverBy::linkText("Add New")
		);
	}catch(Exception $e){
		$this->fail("->Could not find 'Add New' button in Pages overview");
	}
	$link->click();

	//Validate button to add blocks to page is present
	$this->assertContains(
		'Add Post Element',$this->webDriver->findElement(
		WebDriverBy::className('shortcake-add-post-element'))->getText()
	);


	//Enter title of page
	$field	= $this->webDriver->findElement(
		WebDriverBy::id('title-prompt-text')
	);
	$field->click();
	$this->webDriver->getKeyboard()->sendKeys('Test automated - Header');

	//Validate corresponding block fields are present
	try{
		$this->webDriver->findElement(WebDriverBy::id("p4_title"));
		$this->webDriver->findElement(WebDriverBy::id("p4_subtitle"));
		$this->webDriver->findElement(WebDriverBy::cssSelector("div[data-fieldtype='wysiwyg']"));
		$this->webDriver->findElement(WebDriverBy::id("p4_button_title"));
		$this->webDriver->findElement(WebDriverBy::id("p4_button_link"));	
		$this->webDriver->findElement(WebDriverBy::cssSelector("input[value='Add Background Image']"));
	}catch(Exception $e){
		$this->fail("->Fields corresponding to 'Header' block not found");
	}

	//Fill in fields
	$titl = 'Test Header';
	$subtitl = 'This is a test subtitle';
	$desc = 'This is a test description generated by an automated tests to test header block';
	$blink = 'Test button';
	$burl = 'http://www.greenpeace.org';
	$fld = $this->webDriver->findElement(WebDriverBy::id("p4_title"));
	$fld->click();
	$this->webDriver->getKeyboard()->sendKeys("$titl");
	$this->webDriver->findElement(WebDriverBy::id("p4_subtitle"))->click();
	$this->webDriver->getKeyboard()->sendKeys("$subtitl");
	$fld = $this->webDriver->findElement(
		WebDriverBy::cssSelector('.cmb2-id-p4-description #wp-p4_description-wrap #wp-p4_description-editor-container iframe'));
	$fld->click();
	$this->webDriver->getKeyboard()->sendKeys("$desc");
	$this->webDriver->findElement(WebDriverBy::id("p4_button_title"))->click();
	$this->webDriver->getKeyboard()->sendKeys("$blink");
	$this->webDriver->findElement(WebDriverBy::id("p4_button_link"))->click();
	$this->webDriver->getKeyboard()->sendKeys("$burl");
	//Upload image
	$this->webDriver->findElement(WebDriverBy::cssSelector("input[value='Add Background Image']"))->click();
	$this->webDriver->findElement(WebDriverBy::linkText('Media Library'))->click();
	//Wait for media library to load
	$this->webDriver->wait(10, 1000)->until(
		WebDriverExpectedCondition::presenceOfElementLocated(
		WebDriverBy::cssSelector('ul.attachments')));
	$this->webDriver->manage()->timeouts()->implicitlyWait(10);
	//Select first image of media library
	$srcfirstchild = $this->webDriver->findElement(
		WebDriverBy::cssSelector("li.attachment:first-child img"))->getAttribute('src');
	$this->webDriver->findElement(WebDriverBy::cssSelector("li.attachment:first-child"))->click();
	$this->webDriver->findElement(WebDriverBy::className("media-button-select"))->click();

	//Scroll to top of page
	$this->webDriver->executeScript('window.scrollTo(0,0);');
	//Publish content
	$btn=$this->webDriver->findElement(
		WebDriverBy::id('publish'));
	$btn->click();
	
	//Wait to see successful message
	$this->webDriver->wait(10, 1000)->until(
		WebDriverExpectedCondition::visibilityOfElementLocated(
		WebDriverBy::id('message')));
	//Validate I see successful message
	try{
		$this->assertContains(
			'Page published',$this->webDriver->findElement(
			WebDriverBy::id('message'))->getText()
		);
	}catch(Exception $e){
		$this->fail('->Failed to publish content - no sucessful message after saving content');
	}
	//Wait for saved changes to load
	$this->webDriver->manage()->timeouts()->implicitlyWait(10);
	//Go to page to validate page contains added block
	$link = $this->webDriver->findElement(
		WebDriverBy::linkText('View page'));	
	$link->click();	
	//If alert shows up asking to confirm leaving the page, confirm
	try{
		$this->webDriver->switchTo()->alert()->accept();
	}catch(Exception $e){}
	//Validate Block contains corresponding classes and content
	try{
		$this->webDriver->findElement(WebDriverBy::className('page-header'));
		$srcimg = substr(($this->webDriver->findElement(
			WebDriverBy::className('hero-img-wrap'))->getCSSValue('background-image')), 5, -6);
	}catch(Exception $e){
		$this->fail('->Some of the content created is not displayed in front end page');
	}
	$this->assertEquals("$titl",$this->webDriver->findElement(
			WebDriverBy::cssSelector('.page-header h1'))->getText());
	$this->assertEquals("$subtitl",$this->webDriver->findElement(
		WebDriverBy::cssSelector('.page-header h3'))->getText());
	$this->assertEquals("$desc",$this->webDriver->findElement(
		WebDriverBy::cssSelector('.page-header p'))->getText());
	$blink = strtoupper ("$blink");
	$this->assertEquals("$blink",$this->webDriver->findElement(
		WebDriverBy::cssSelector('.page-header .col-md-4 a'))->getText());
	$this->assertContains("$burl",$this->webDriver->findElement(
		WebDriverBy::cssSelector('.page-header .col-md-4 a'))->getAttribute('href'));
	$this->assertContains("$srcimg","$srcfirstchild");

	// I log out after test
    $this->wpLogout();
  }

  protected function assertElementNotFound($by)
  {
	$this->webDriver->takeScreenshot('reports/screenshots/'.__CLASS__.'.png');
	$els = $this->webDriver->findElements($by);
	if (count($els)) {
		$this->fail("Unexpectedly element was found");
	}
	// increment assertion counter
	$this->assertTrue(true);

  }

}
?>
